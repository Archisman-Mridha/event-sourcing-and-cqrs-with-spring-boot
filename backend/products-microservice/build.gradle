/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.6/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral( )
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.1'

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:31.1-jre'

    compileOnly group: 'org.projectlombok', name: 'lombok', version: '1.18.26'

    implementation group: 'org.springframework', name: 'spring-web', version: '6.0.6'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: '3.0.4'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-validation', version: '3.0.4'

    implementation group: 'com.google.code.gson', name: 'gson', version: '2.10.1'
    implementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-netflix-eureka-client', version: '4.0.0'

    implementation group: 'org.axonframework', name: 'axon-spring-boot-starter', version: '4.7.3'

    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa', version: '3.0.4'
    testImplementation group: 'com.h2database', name: 'h2', version: '2.1.214'
}

application {
    // Define the main class for the application.
    mainClass = 'com.ecommerce.ProductsMicroservice.App'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform( )
}
